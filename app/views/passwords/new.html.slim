
div.container.mb-5 id="introduction"
	div.section-title.col-lg-8.col-md-10.ml-auto.mr-auto
		div.heading-title
			h1
				span Share your secret
		p.lead All secrets are encrypted prior to storage and are available to only those with the secret link. Once expired, encrypted secrets are unequivocally deleted from the database.
		
div.container.mb-5  id="forms"
	div.example.col-lg-8.col-md-10.ml-auto.mr-auto
		div.row.mb-5
			div.col-md-12
				form id="new_password" action="/p" accept-charset="UTF-8" method="post"
					div.row
						div.form-group.col-md-12
							input.form-control.form-control-lg type="password" id="password_payload" name="password[payload]" data-toggle="password" placeholder="Enter the secret to be shared"
							span.fa.fa-fw.fa-eye.field-icon.toggle-password toggle="#password_payload" data-toggle="tooltip" data-placement="left" data-original-title="Show the secret for 10 seconds" title=""
					div.row
						div.col-md-12.mb-4
							div.alert.alert-danger.d-none.first-hidden-alert id="alertPayloadError"
								p 
									b The Password can't be longer then 250 characters!
					div.row
						div.col-md-6.mb-4
							label Expire link in
							select.custom-select id="password_expire_after_time" name="password[expire_after_time]"
								/ To change adjust EXPIRE_AFTER_TIME_ALLOWED in config/environment.rb
								- EXPIRE_AFTER_TIME_ALLOWED.each do |time|
									option value="#{time}" 
										-if time < 24
											= time == 1 ? "#{time} hour" : "#{time} hours"
										-else
											= time == 24 ? "#{time/24} day" : "#{time/24} days"
						div.col-md-6.mb-4
							label Expire link after
							select.custom-select id="password_expire_after_views" name="password[expire_after_views]"
								/ To change adjust EXPIRE_AFTER_VIEWS_ALLOWED in config/environment.rb
								- EXPIRE_AFTER_VIEWS_ALLOWED.each do |view|
									option value="#{view}" 
										= view == 1 ? "#{view} view" : "#{view} views"
					div.row
						div.col-md-12.mb-4
							fieldset
								div.custom-control.custom-toggle.custom-toggle-sm.d-block.my-2
									input.custom-control-input type="checkbox" id="password_deletable_by_viewer" name="password[deletable_by_viewer]"
									label.custom-control-label for="password_deletable_by_viewer" Allow viewers to optionally delete secret before expiration
					div.row
						div.col-md-12.mb-4
							button.btn.btn-primary.btn-lg.btn-block type="submit" id="btnSubmit" Push it 
					div.row
						div.col-md-12.mb-4.text-center
							a id="btnSaveExpirations" href="#" Save these settings as default in a browser cookie
					div.row
						div.col-md-12.mb-4.text-center
							a href="#" data-toggle="modal" data-target="#aboutModal" About SecretPush
						div.modal.fade id="aboutModal" tabindex="-1" role="dialog" aria-labelledby="aboutModalLabel" aria-hidden="true"
							div.modal-dialog role="document"
								div.modal-content
									div.modal-header
										h5.modal-title id="aboutModalLabel" About SecretPush
										button.close type="button" data-dismiss="modal" aria-label="Close"
											span.fa.fa-fw.fa-close
									div.modal-body
										p SecretPush is a Ruby application to communicate secrets over the web. Links to secrets expire after a certain number of views and/or time has passed
										p 
											| The source code to this site is 
											a href="https://github.com/smarthouse/PasswordPusher/tree/smarthouse" on Github 
										p 
											| The original SecretPush-App was developed by Peter Giacomo Lombardo and is 
											a href="https://github.com/pglombardo/PasswordPusher" on Github
										
= content_for :extraTail do
  = javascript_include_tag "passwords"

= content_for :siteTitle do
	| Share your secret - SecretPush